generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model KaryawanTb {
  id            Int             @id @default(autoincrement())
  NIP           String
  nama          String
  tempatLahir   String?
  tanggalLahir  DateTime?
  alamat        String?
  hp            String          @unique
  email         String          @unique
  foto          String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  DetailKerjaTb DetailKerjaTb[]
}

model UnitTb {
  id        Int       @id @default(autoincrement())
  nama      String
  usernama  String    @unique
  foto      String?
  petugas   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  KerjaTb   KerjaTb[]
  UserTb    UserTb?
}

model KerjaTb {
  id                   Int             @id @default(autoincrement())
  unitId               Int
  tanggal              DateTime
  shift                String
  totallaporangangguan Int
  totalwoplnmobile     Int
  woselesai            Int
  wobelumselesai       Int
  jumlahp0             Int
  pemakaianmaterial    String
  foto                 String?
  createdAt            DateTime        @default(now())
  updatedAt            DateTime        @updatedAt
  UnitTb               UnitTb          @relation(fields: [unitId], references: [id], onDelete: Cascade)
  DetailKerjaTb        DetailKerjaTb[]
}

model DetailKerjaTb {
  id         Int        @id @default(autoincrement())
  karyawanId Int
  kerjaId    Int
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  KaryawanTb KaryawanTb @relation(fields: [karyawanId], references: [id], onDelete: Cascade)
  KerjaTb    KerjaTb    @relation(fields: [kerjaId], references: [id], onDelete: Cascade)
}

model UserTb {
  id        Int      @id @default(autoincrement())
  unitId    Int      @unique
  usernama  String   @unique
  password  String
  status    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  UnitTb    UnitTb   @relation(fields: [unitId], references: [id], onDelete: Cascade)
}

model SlideTb {
  id        Int      @id @default(autoincrement())
  judul     String
  gambar    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProfilTb {
  id        Int      @id @default(autoincrement())
  nama      String?
  alamat    String?
  email     String?
  telp      String?
  wa        String?
  lokasi    String?
  radius    Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
